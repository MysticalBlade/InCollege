>>SOURCE FORMAT FREE
IDENTIFICATION DIVISION.
PROGRAM-ID. InCollege.

ENVIRONMENT DIVISION.
CONFIGURATION SECTION.
SOURCE-COMPUTER. GNUCOBOL.
OBJECT-COMPUTER. GNUCOBOL.

INPUT-OUTPUT SECTION.
FILE-CONTROL.
    SELECT USER-INPUT ASSIGN TO 'InCollege-Input.txt'
        ORGANIZATION IS LINE SEQUENTIAL.
    SELECT PROGRAM-OUTPUT ASSIGN TO 'InCollege-Output.txt'
        ORGANIZATION IS LINE SEQUENTIAL.
    SELECT USER-ACCOUNTS ASSIGN TO 'Accounts.dat'
        ORGANIZATION IS LINE SEQUENTIAL
        FILE STATUS IS ACCOUNT-FILE-STATUS.

DATA DIVISION.
FILE SECTION.
FD  USER-INPUT.
01  INPUT-LINE                 PIC X(200).

FD  PROGRAM-OUTPUT.
01  OUTPUT-LINE                PIC X(200).

FD  USER-ACCOUNTS.
01  ACCOUNT-DATA.
    05  USER-NAME              PIC X(20).
    05  FILLER                 PIC X     VALUE '|'.
    05  USER-PASSWORD          PIC X(12).

WORKING-STORAGE SECTION.
01  ACCOUNT-FILE-STATUS        PIC XX.
01  END-OF-FILE-FLAG           PIC X      VALUE 'N'.
    88  NO-MORE-DATA           VALUE 'Y'.

01  INPUT-BUFFER               PIC X(200) VALUE SPACES.
01  MESSAGE-BUFFER             PIC X(200) VALUE SPACES.

01  CREDENTIALS-VALID          PIC X      VALUE 'N'.
01  PASSWORD-VALID-FLAG        PIC X      VALUE 'N'.

01  MAXIMUM-ACCOUNTS           PIC 9      VALUE 5.
01  ACCOUNT-INFO.
    05  ACCOUNT-COUNT          PIC 9      VALUE 0.
    05  ACCOUNT-ENTRY OCCURS 5 TIMES.
       10  ACCT-USER           PIC X(20).
       10  ACCT-PASS           PIC X(12).

01  LOOP-INDEX                 PIC 99     VALUE 0.
01  SKILL-INDEX                PIC 99     VALUE 0.

01  CURRENT-USER               PIC X(20)  VALUE SPACES.
01  INPUT-USERNAME             PIC X(20)  VALUE SPACES.
01  INPUT-PASSWORD             PIC X(12)  VALUE SPACES.

01  PASS-LENGTH                PIC 99     VALUE 0.
01  CURRENT-CHAR               PIC X      VALUE SPACE.
01  CONTAINS-UPPERCASE         PIC X      VALUE 'N'.
01  CONTAINS-DIGIT             PIC X      VALUE 'N'.
01  CONTAINS-SPECIAL-CHAR      PIC X      VALUE 'N'.

01  NORMALIZED-INPUT           PIC X(200) VALUE SPACES.

01  AVAILABLE-SKILLS.
    05  SKILL-LIST OCCURS 5 TIMES PIC X(40) VALUE SPACES.

PROCEDURE DIVISION.
000-MAIN.
    PERFORM 100-INITIALIZE-PROGRAM
    PERFORM 200-MAIN-LOOP UNTIL NO-MORE-DATA
    PERFORM 900-TERMINATE-PROGRAM
    STOP RUN.

100-INITIALIZE-PROGRAM.
    OPEN OUTPUT PROGRAM-OUTPUT
    OPEN INPUT  USER-INPUT

    OPEN INPUT USER-ACCOUNTS
    IF ACCOUNT-FILE-STATUS = "00"
        PERFORM UNTIL 1 = 2
            READ USER-ACCOUNTS
                AT END EXIT PERFORM
            END-READ
            IF USER-NAME NOT = SPACES
                ADD 1 TO ACCOUNT-COUNT
                MOVE USER-NAME TO ACCT-USER(ACCOUNT-COUNT)
                MOVE USER-PASSWORD TO ACCT-PASS(ACCOUNT-COUNT)
            END-IF
        END-PERFORM
        CLOSE USER-ACCOUNTS
    END-IF

    *> Initialize skills as "Skill 1" through "Skill 5" to match sample
    MOVE "Skill 1" TO SKILL-LIST(1)
    MOVE "Skill 2" TO SKILL-LIST(2)
    MOVE "Skill 3" TO SKILL-LIST(3)
    MOVE "Skill 4" TO SKILL-LIST(4)
    MOVE "Skill 5" TO SKILL-LIST(5)

    MOVE "Welcome to InCollege!" TO MESSAGE-BUFFER
    PERFORM 700-DISPLAY-MESSAGE.

200-MAIN-LOOP.
    MOVE "Log In" TO MESSAGE-BUFFER
    PERFORM 700-DISPLAY-MESSAGE
    MOVE "Create New Account" TO MESSAGE-BUFFER
    PERFORM 700-DISPLAY-MESSAGE
    MOVE "Enter your choice:" TO MESSAGE-BUFFER
    PERFORM 700-DISPLAY-MESSAGE

    PERFORM 600-GET-USER-INPUT
    IF NO-MORE-DATA
        EXIT PARAGRAPH
    END-IF

    MOVE FUNCTION UPPER-CASE(FUNCTION TRIM(INPUT-BUFFER))
      TO NORMALIZED-INPUT

    EVALUATE TRUE
       WHEN NORMALIZED-INPUT = "1"
           OR NORMALIZED-INPUT = "LOGIN"
           OR NORMALIZED-INPUT = "LOG IN"
               PERFORM 300-LOGIN-PROCESS

       WHEN NORMALIZED-INPUT = "2"
           OR NORMALIZED-INPUT = "CREATE"
           OR NORMALIZED-INPUT = "NEW"
               PERFORM 400-CREATE-ACCOUNT-PROCESS

       WHEN OTHER
           CONTINUE
    END-EVALUATE.


300-LOGIN-PROCESS.
    PERFORM UNTIL NO-MORE-DATA
        MOVE "Please enter your username:" TO MESSAGE-BUFFER
        PERFORM 700-DISPLAY-MESSAGE
        PERFORM 600-GET-USER-INPUT
        IF NO-MORE-DATA
            EXIT PERFORM
        END-IF
        MOVE FUNCTION TRIM(INPUT-BUFFER) TO INPUT-USERNAME

        MOVE "Please enter your password:" TO MESSAGE-BUFFER
        PERFORM 700-DISPLAY-MESSAGE
        PERFORM 600-GET-USER-INPUT
        IF NO-MORE-DATA
            EXIT PERFORM
        END-IF
        MOVE FUNCTION TRIM(INPUT-BUFFER) TO INPUT-PASSWORD

        PERFORM 800-VERIFY-CREDENTIALS
        IF CREDENTIALS-VALID = 'Y'
            MOVE "You have successfully logged in." TO MESSAGE-BUFFER
            PERFORM 700-DISPLAY-MESSAGE
            MOVE SPACES TO MESSAGE-BUFFER
            STRING "Welcome, "               DELIMITED BY SIZE
                   FUNCTION TRIM(INPUT-USERNAME) DELIMITED BY SIZE
                   "!"                       DELIMITED BY SIZE
              INTO MESSAGE-BUFFER
            END-STRING
            PERFORM 700-DISPLAY-MESSAGE

            MOVE FUNCTION TRIM(INPUT-USERNAME) TO CURRENT-USER

            PERFORM 500-POST-LOGIN-OPERATIONS
            EXIT PERFORM
        ELSE
            MOVE "Incorrect username/password, please try again"
              TO MESSAGE-BUFFER
            PERFORM 700-DISPLAY-MESSAGE
        END-IF
    END-PERFORM.

400-CREATE-ACCOUNT-PROCESS.
    IF ACCOUNT-COUNT >= MAXIMUM-ACCOUNTS
        MOVE "All permitted accounts have been created, please come back later"
          TO MESSAGE-BUFFER
        PERFORM 700-DISPLAY-MESSAGE
        EXIT PARAGRAPH
    END-IF

    MOVE "Please enter your username:" TO MESSAGE-BUFFER
    PERFORM 700-DISPLAY-MESSAGE
    PERFORM 600-GET-USER-INPUT
    IF NO-MORE-DATA
        EXIT PARAGRAPH
    END-IF
    MOVE FUNCTION TRIM(INPUT-BUFFER) TO INPUT-USERNAME

    COMPUTE PASS-LENGTH =
        FUNCTION LENGTH(FUNCTION TRIM(INPUT-USERNAME))
    IF PASS-LENGTH > 20
        MOVE "Username too long (max 20)." TO MESSAGE-BUFFER
        PERFORM 700-DISPLAY-MESSAGE
        EXIT PARAGRAPH
    END-IF

    MOVE 'N' TO CREDENTIALS-VALID
    PERFORM VARYING LOOP-INDEX FROM 1 BY 1
      UNTIL LOOP-INDEX > ACCOUNT-COUNT
        IF INPUT-USERNAME = FUNCTION TRIM(ACCT-USER(LOOP-INDEX))
            MOVE "Username already exists, please try again."
              TO MESSAGE-BUFFER
            PERFORM 700-DISPLAY-MESSAGE
            EXIT PARAGRAPH
        END-IF
    END-PERFORM

    MOVE "Please enter your password:" TO MESSAGE-BUFFER
    PERFORM 700-DISPLAY-MESSAGE
    PERFORM 600-GET-USER-INPUT
    IF NO-MORE-DATA
        EXIT PARAGRAPH
    END-IF
    MOVE FUNCTION TRIM(INPUT-BUFFER) TO INPUT-PASSWORD

    PERFORM 810-VALIDATE-PASSWORD
    IF PASSWORD-VALID-FLAG NOT = 'Y'
        MOVE "Invalid password. Password must be 8-12 characters and include at least one capital letter, one digit, and one special character."
          TO MESSAGE-BUFFER
        PERFORM 700-DISPLAY-MESSAGE
        EXIT PARAGRAPH
    END-IF

    ADD 1 TO ACCOUNT-COUNT
    MOVE INPUT-USERNAME TO ACCT-USER(ACCOUNT-COUNT)
    MOVE INPUT-PASSWORD TO ACCT-PASS(ACCOUNT-COUNT)
    MOVE "Account created successfully." TO MESSAGE-BUFFER
    PERFORM 700-DISPLAY-MESSAGE.

500-POST-LOGIN-OPERATIONS.
    PERFORM UNTIL NO-MORE-DATA
        MOVE "Search for a job" TO MESSAGE-BUFFER
        PERFORM 700-DISPLAY-MESSAGE
        MOVE "Find someone you know" TO MESSAGE-BUFFER
        PERFORM 700-DISPLAY-MESSAGE
        MOVE "Learn a new skill" TO MESSAGE-BUFFER
        PERFORM 700-DISPLAY-MESSAGE
        MOVE "Enter your choice:" TO MESSAGE-BUFFER
        PERFORM 700-DISPLAY-MESSAGE

        PERFORM 600-GET-USER-INPUT
        IF NO-MORE-DATA
            EXIT PERFORM
        END-IF
        MOVE FUNCTION UPPER-CASE(FUNCTION TRIM(INPUT-BUFFER))
          TO NORMALIZED-INPUT

        EVALUATE TRUE
           WHEN NORMALIZED-INPUT = "1"
             OR NORMALIZED-INPUT = "SEARCH FOR A JOB"
             OR NORMALIZED-INPUT = "SEARCH"
               MOVE "Job search/internship is under construction." TO MESSAGE-BUFFER
               PERFORM 700-DISPLAY-MESSAGE

           WHEN NORMALIZED-INPUT = "2"
             OR NORMALIZED-INPUT = "FIND SOMEONE YOU KNOW"
             OR NORMALIZED-INPUT = "FIND"
               MOVE "Find someone you know is under construction." TO MESSAGE-BUFFER
               PERFORM 700-DISPLAY-MESSAGE

           WHEN NORMALIZED-INPUT = "3"
             OR NORMALIZED-INPUT = "LEARN A NEW SKILL"
             OR NORMALIZED-INPUT = "LEARN"
               PERFORM 550-SKILLS-MODULE

           WHEN OTHER
               CONTINUE
        END-EVALUATE
    END-PERFORM.

550-SKILLS-MODULE.
    PERFORM UNTIL NO-MORE-DATA
        *> Skills menu format to match sample output
        MOVE "Learn a New Skill:" TO MESSAGE-BUFFER
        PERFORM 700-DISPLAY-MESSAGE

        *> Display Skill 1 through Skill 5
        PERFORM VARYING SKILL-INDEX FROM 1 BY 1
          UNTIL SKILL-INDEX > 5
            MOVE SKILL-LIST(SKILL-INDEX) TO MESSAGE-BUFFER
            PERFORM 700-DISPLAY-MESSAGE
        END-PERFORM

        MOVE "Go Back" TO MESSAGE-BUFFER
        PERFORM 700-DISPLAY-MESSAGE
        MOVE "Enter your choice:" TO MESSAGE-BUFFER
        PERFORM 700-DISPLAY-MESSAGE

        PERFORM 600-GET-USER-INPUT
        IF NO-MORE-DATA
            EXIT PERFORM
        END-IF
        MOVE FUNCTION UPPER-CASE(FUNCTION TRIM(INPUT-BUFFER))
          TO NORMALIZED-INPUT

        IF NORMALIZED-INPUT = "GO BACK"
           OR NORMALIZED-INPUT = "BACK"
           OR NORMALIZED-INPUT = "0"
            EXIT PERFORM
        ELSE
            MOVE 0 TO LOOP-INDEX
            IF NORMALIZED-INPUT >= "1" AND NORMALIZED-INPUT <= "5"
                MOVE FUNCTION NUMVAL(NORMALIZED-INPUT) TO LOOP-INDEX
            ELSE
                PERFORM VARYING SKILL-INDEX FROM 1 BY 1
                  UNTIL SKILL-INDEX > 5
                   IF NORMALIZED-INPUT = FUNCTION UPPER-CASE(
                      FUNCTION TRIM(SKILL-LIST(SKILL-INDEX)))
                      MOVE SKILL-INDEX TO LOOP-INDEX
                      EXIT PERFORM
                   END-IF
                END-PERFORM
            END-IF

            IF LOOP-INDEX >= 1 AND LOOP-INDEX <= 5
                MOVE "This skill is under construction." TO MESSAGE-BUFFER
                PERFORM 700-DISPLAY-MESSAGE
            END-IF
        END-IF
    END-PERFORM.

600-GET-USER-INPUT.
    READ USER-INPUT
        AT END
            SET NO-MORE-DATA TO TRUE
        NOT AT END
            MOVE FUNCTION TRIM(INPUT-LINE) TO INPUT-BUFFER
    END-READ.

700-DISPLAY-MESSAGE.
    MOVE SPACES TO OUTPUT-LINE
    MOVE FUNCTION TRIM(MESSAGE-BUFFER) TO OUTPUT-LINE
    DISPLAY FUNCTION TRIM(MESSAGE-BUFFER)
    WRITE OUTPUT-LINE.


800-VERIFY-CREDENTIALS.
    MOVE 'N' TO CREDENTIALS-VALID
    PERFORM VARYING LOOP-INDEX FROM 1 BY 1
      UNTIL LOOP-INDEX > ACCOUNT-COUNT
        IF INPUT-USERNAME = FUNCTION TRIM(ACCT-USER(LOOP-INDEX))
           AND INPUT-PASSWORD = FUNCTION TRIM(ACCT-PASS(LOOP-INDEX))
           MOVE 'Y' TO CREDENTIALS-VALID
           EXIT PERFORM
        END-IF
    END-PERFORM.

810-VALIDATE-PASSWORD.
    MOVE 0 TO PASS-LENGTH
    MOVE 'N' TO CONTAINS-UPPERCASE
    MOVE 'N' TO CONTAINS-DIGIT
    MOVE 'N' TO CONTAINS-SPECIAL-CHAR

    COMPUTE PASS-LENGTH =
        FUNCTION LENGTH(FUNCTION TRIM(INPUT-PASSWORD))
    IF PASS-LENGTH < 8 OR PASS-LENGTH > 12
        MOVE 'N' TO PASSWORD-VALID-FLAG
        EXIT PARAGRAPH
    END-IF

    PERFORM VARYING LOOP-INDEX FROM 1 BY 1
      UNTIL LOOP-INDEX > PASS-LENGTH
        MOVE INPUT-PASSWORD(LOOP-INDEX:1) TO CURRENT-CHAR

        IF CURRENT-CHAR IS NUMERIC
            MOVE 'Y' TO CONTAINS-DIGIT
        END-IF
        IF CURRENT-CHAR IS ALPHABETIC AND
           CURRENT-CHAR = FUNCTION UPPER-CASE(CURRENT-CHAR)
            MOVE 'Y' TO CONTAINS-UPPERCASE
        END-IF
        IF CURRENT-CHAR NOT ALPHABETIC AND
           CURRENT-CHAR NOT NUMERIC AND
           CURRENT-CHAR NOT = SPACE
            MOVE 'Y' TO CONTAINS-SPECIAL-CHAR
        END-IF
    END-PERFORM

    IF CONTAINS-UPPERCASE = 'Y' AND
       CONTAINS-DIGIT = 'Y' AND
       CONTAINS-SPECIAL-CHAR = 'Y'
        MOVE 'Y' TO PASSWORD-VALID-FLAG
    ELSE
        MOVE 'N' TO PASSWORD-VALID-FLAG
    END-IF.

900-TERMINATE-PROGRAM.
    OPEN OUTPUT USER-ACCOUNTS
    PERFORM VARYING LOOP-INDEX FROM 1 BY 1
      UNTIL LOOP-INDEX > ACCOUNT-COUNT
        MOVE ACCT-USER(LOOP-INDEX) TO USER-NAME
        MOVE ACCT-PASS(LOOP-INDEX) TO USER-PASSWORD
        WRITE ACCOUNT-DATA
    END-PERFORM
    CLOSE USER-ACCOUNTS

    MOVE "--- END_OF_PROGRAM_EXECUTION ---" TO MESSAGE-BUFFER
    PERFORM 700-DISPLAY-MESSAGE

    CLOSE PROGRAM-OUTPUT
    CLOSE USER-INPUT.